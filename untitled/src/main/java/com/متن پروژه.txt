
۱. سیستم‌ها
در این فاز علاوه بر سیستم‌های مرجع و سیستم‌های عادی، چهار دسته سیستم دیگر نیز به شبکه اضافه خواهند شد:

۱.۱. سیستم‌های جاسوسی

با ورود یک پکت به یک سیستم جاسوسی، این پکت می‌تواند از هر یک از سیستم‌های جاسوسی موجود در شبکه خارج شود. با ورود پکت‌های محرمانه به این سیستم‌ها، پکت به طور کامل از بین خواهد رفت. این سیستم‌ها نمی‌توانند روی عملکرد پکت‌های محافظت شده تاثیر بگذارند.

۱.۲. سیستم‌های خراب‌کار

این سیستم‌ها برعکس سیستم‌های عادی، پکت‌ها را به پورت‌های ناسازگار ارسال می‌کنند و در صورتی که پکت ورودی به آنها هیچ نویزی نداشته باشد، یک واحد نویز به آن القا می‌کنند. به احتمال مشخصی، هر پکت ورودی به این سیستم به یک پکت تروجان تبدیل خواهد شد. این سیستم روی عملکرد پکت‌های محافظت شده اثری ندارد.

۱.۳. سیستم VPN

هر پکت ورودی به یک سیستم VPN به شکل یک پکت محافظت شده از آن خارج خواهد شد. در صورتی که یک سیستم VPN از کار بیفتد، تمام پکت‌هایی که توسط این سیستم به پکت محافظت شده تبدیل شده‌اند به نوع اولیه خود باز می‌گردند و مجدداً نسبت به سیستم‌های خراب‌کار و سیستم‌های جاسوسی آسیب‌پذیر خواهند شد.

۱.۴. سیستم آنتی‌تروجان

این سیستم‌ها سلامت پکت‌های شبکه را تا شعاع مشخصی بررسی می‌کنند. در صورتی که یک پکت تروجان در شعاع مشخصی از یک سیستم آنتی‌تروجان قرار داشته باشد، این سیستم آن را به یک پکت پیام‌رسان تبدیل می‌کند. بعد از هر عملکرد موفق، سیستم آنتی‌تروجان به مدت مشخصی از کار می‌افتد.

۱.۵. سیستم‌های Distribute و Merge

این سیستم‌ها وظیفه تقسیم و بازیابی پکت‌های حجیم (که در ادامه به تفصیل توضیح داده شده‌اند) را دارند. این سیستم‌ها در عبور یک پکت عادی (غیر حجیم) مثل سیستم‌های عادی شبکه رفتار می‌کنند اما در صورتی که یک پکت حجیم وارد سیستم Distribution شود، به تعدادی بیت‌پکت تقسیم خواهد شد که بعداً توسط سیستم‌های Merger به پکت حجیم اولیه بازیابی می‌شوند.

۲. سیم‌کشی‌های واقع‌گرایانه
در این فاز از پروژه، اتصالات ایجاد شده در شبکه نمی‌توانند از روی سیستم‌ها عبور کنند. تا وقتی که سیم ایجاد شده، از روی یک سیستم عبور کرده باشد، این اتصال معتبر نخواهد بود و اجازه اجرای شبکه به شما داده نخواهد شد.
در عوض، شما می‌توانید با پرداخت یک سکه، یک "انحنا" روی یک سیم ایجاد کنید! (پیشنهاد می‌شود انحناهای یک سیم را به صورت نقاطی رنگی روی سیم نمایش دهید)
با این کار، شما می‌توانید این نقطه از سیم را تا شعاعی مشخص جابجا کنید تا آن را از موانع احتمالی عبور دهید. توجه کنید تغییرات شکل سیم باید به شکل پیوسته انجام شود.
ایجاد انحنا روی یک سیم، طول سیم و مسیر حرکت پکت‌ها از روی این سیم را به کلی تغییر می‌دهد و در نتیجه یکی از چالش‌های احتمالی شما، طراحی راهکاری برای محاسبه طول سیم و تعیین مسیر حرکت پکت‌ها (با در نظر داشتن اثر شتاب و یا سرعت ثابت) روی آنهاست.
همچنین روی هر سیم حداکثر 3 انحنا می‌توانید ایجاد کنید. ضمناً پس از ایجاد یک نقطه انحنا روی سیم، برای جابجا کردن نقطه انحنا نیاز به پرداخت سکه مجدد نیست.

راهنمایی:
برای محاسبات مربوط به طول و همچنین نحوه حرکت صحیح (با در نظر گرفتن حرکت سرعت ثابت و یا حرکت شتاب‌دار) روی سیم‌های منحنی، هر یک از اتصالات شبکه را به صورت یک خط شکسته شامل تعداد مشخصی نقطه در نظر بگیرید.

۳. مکانیک‌های پکت و انواع پکت‌ها
۳.۱. کلیات Packet Mechanics v2.0
در این فاز، طراحی شبکه و سیم‌کشی‌ها و قابلیت‌های اپراتور در کنترل آنها دست‌خوش تغییراتی خواهند شد که در این فاز به آنها خواهیم پرداخت.
همانطور که در فاز قبل اشاره شد، در این فاز سیم‌کشی‌ها لزوماً به صورت خطوط صاف نخواهند بود (توضیحات در ادامه آمده است).
همچنین، واحد سکه (Coin) که به عنوان یک مورد از HUD از آن نام برده شده بود به بازی اضافه می‌شود.
…
همان‌طور که در بخش بعد خواهید دید، در این فاز ممکن است سیستم‌ها به صورت ناگهانی از کار بیفتند. در این صورت، پکت بعد از رسیدن به سیستم مقصد، از طریق همان سیم به سیستم مبدا خود باز می‌گردد. همچنین در هنگام انتخاب یک پورت خروجی برای حرکت به سمت یک سیستم جدید، پکت‌ها نباید پورت‌های منتهی به سیستم‌های غیر فعال را انتخاب کنند!

۳.۲. مکانیک‌های جدید مربوط به پکت‌ها
در این فاز به علت تغییر مکانیزم‌های سیم‌کشی، احتمال وجود سیم‌های طولانی افزایش می‌یابد. اگر طول سیم از حد مشخصی بیشتر باشد، یک پکت (وابسته به پروتکل‌های حرکتی) می‌تواند به صورت شتاب‌دار روی آن حرکت کند.
حرکت شتاب‌دار روی یک سیم طولانی باعث افزایش شدید سرعت پکت می‌شود. از آنجا که سرعت انتقال داده‌ها در اتصالات شبکه محدود است، این اتفاق باعث آسیب به سیستم می‌شود!
بنابراین در صورتی که سرعت یک پکت حین ورود به یک سیستم از حد مشخصی تجاوز کند، سیستم مقصد به مدت مشخصی غیرفعال خواهد شد.
در نتیجه مطلوب است که سرعت پکت‌ها را در حد محدودی حفظ کنید. به این منظور، در این فاز در فروشگاه آیتم‌های جدیدی قابل خرید خواهند بود که به شما برای کنترل سرعت حرکت پکت‌ها کمک می‌کنند.

۳.۳. پکت‌های پیام‌رسان
این پکت‌ها که عادی‌ترین نوع پکت‌های موجود هستند، تنها وظیفه انتقال عادی پیام‌ها را در شبکه خواهند داشت و عبارتند از:

اندازه: 2 واحد

با هر بار ورود به سیستم: 2 سکه به شبکه اضافه می‌کند

سرعت حرکت:

با شروع از یک پورت سازگار نصف سرعت حرکت آن با شروع حرکت از یک پورت ناسازگار است.

حرکت آن در هر یک از پورت‌ها با سرعت ثابت انجام می‌گیرد. (مگر در اثر Impact)

۳.۴. پکت‌های پیام‌رسان (نوع دوم)
اندازه: 3 واحد

با هر بار ورود به سیستم: 3 سکه به شبکه اضافه می‌کند

سرعت حرکت:

حرکت آن با شروع حرکت از پورت‌های سازگار با سرعت ثابت است (مگر در اثر Impact)

حرکت آن در عبور از یک پورت ناسازگار شتاب‌دار خواهد بود

۳.۵. پکت‌های پیام‌رسان (نوع سوم)
اندازه: 1 واحد

با هر بار ورود به سیستم: 1 سکه به شبکه اضافه می‌کند

سرعت حرکت:

با شروع از یک پورت سازگار، با شتاب ثابت است (مگر در اثر Impact)

در صورت حرکت آن در عبور از یک پورت ناسازگار، شتاب حرکت نزولی خواهد بود.

برخورد:

در صورتی که این پکت بعد از شروع به حرکت روی یکی از سیم‌ها، با پکت دیگری برخورد کند، جهت حرکت خود را تغییر می‌دهد تا به سیستم مبدا بازگردد و مجدداً تلاش می‌کند خود را به سیستم مقصد برساند

سرعت دو برابر:

اگر یک پیام متنی از یک پورت ناسازگار وارد یک سیستم از شبکه شود، با سرعتی دو برابر حالت عادی از سیستم خارج خواهد شد

۳.۶. پکت‌های محافظت شده
این پکت‌ها در واقع از جنس یکی از پکت‌های پیام‌رسان هستند اما نوع آنها برای شبکه مشخص نیست و از لحاظ ظاهری هم پنهان خواهند بود.
نحوه حرکت یک پکت محرمانه روی هر سیم به طور تصادفی از نحوه حرکت یکی از پکت‌های پیام‌رسان انتخاب می‌شود.

اندازه: مقدار دو برابر پکت اولیه

با هر بار ورود به سیستم: 5 سکه به شبکه اضافه می‌کند

تولید:

این پکت در طی عبور یک پکت پیام‌رسان از یک سیستم VPN به وجود می‌آید.

بازگشت به اولیه:

این پکت در طی عبور از یک سیستم خراب‌کار و یا جاسوسی، به نوع اولیه خود باز می‌گردد.

۳.۷. پکت‌های محرمانه (پیشرفته)
این پکت‌ها برای ارتباط امن بین دو سیستم در شبکه آزاد می‌شوند و کارکرد اصلی آنها در فاز بعد معرفی خواهد شد.

اندازه: 4 واحد

با هر بار ورود به سیستم: 3 سکه به شبکه اضافه می‌کند

سرعت حرکت:

با سرعت ثابت روی اتصالات حرکت می‌کند (مگر در اثر Impact)

در صورتی که چنین پکتی در مسیر حرکت به سمت یک سیستم از شبکه قرار داشته باشد و پکت دیگری در این سیستم ذخیره شده باشد، سرعت خود را حد مشخصی کاهش می‌دهد تا همزمان با پکت دیگری در این سیستم حضور نداشته باشد.

۳.۸. پکت‌های محرمانه (نوع دوم)
اندازه: 6 واحد

با هر بار ورود به سیستم: 4 سکه به شبکه اضافه می‌کند

تولید:

این پکت در طی عبور یک پکت محرمانه عادی (مورد قبلی) از یک سیستم VPN به وجود می‌آید.

رفتار:

این پکت در هر لحظه تلاش خواهد کرد فاصله مشخصی را (با حرکت به سمت جلو یا عقب روی اتصالات شبکه) با تمام پکت‌های دیگر موجود روی سیم‌های شبکه حفظ کند

سازگاری:

توجه کنید سازگاری برای پکت‌های محرمانه معنادار نیست و طبعاً پورت‌هایی متناظر با این پکت‌ها وجود نخواهد داشت

۳.۹. پکت‌های حجیم
این نوع از پکت‌ها حمل‌کننده داده‌های حجیم هستند و در نتیجه به سادگی نمی‌توانند از اتصالات عادی عبور کنند.

تأثیر بر سیستم:

بعد از رسیدن به یک سیستم، پکت حجیم تمام پکت‌های ذخیره شده در این سیستم را از بین می‌برد.

تحمل سیم:

هر سیم در شبکه حداکثر تحمل سه بار عبور پکت‌های حجیم را خواهد داشت و پس از سه بار عبور پکت‌های حجیم این سیم از بین خواهد رفت!

تقسیم و بازیابی:

شما باید علاوه بر قرار دادن سیستم‌های Distributor و Merger در ابتدا و انتهای شبکه، شبکه‌ای تحمل‌پذیر طراحی کنید که در صورت از بین رفتن برخی از اتصالات، همچنان قابلیت عبور دادن پکت‌های حجیم را داشته باشد.

بیت‌پکت‌ها:

یک پکت حجیم پس از عبور از یک سیستم Distributor به تعدادی (به مقدار اندازه پکت حجیم مربوطه) بیت‌پکت (پکت‌های پیام‌رسان از اندازه 1) تقسیم می‌شود.

توجه کنید بیت‌پکت‌های پکت‌های حجیم متمایز را با رنگ‌های مختلف از هم تمییز دهید.

شما موظفید طوری برنامه‌ریزی کنید که تمام بیت‌پکت‌های مربوط به یک پکت حجیم در نهایت در یک سیستم Merger جمع شوند و به یک پکت حجیم تبدیل شوند.

Packet Loss:

توجه کنید انتقال یک بیت‌پکت به سیستم مرجع مفید نیست و مشمول Packet Loss خواهد بود.

در صورتی که یک پکت حجیم از اندازه N=n₁+…+nₖ در نهایت به صورت چند پکت حجیم از اندازه‌های n₁,…,nₖ به سیستم‌های مرجع بازگردد، اندازه آن‌ها مجموعاً ⌊(Σnᵢ)/k⌋ خواهد بود و در نتیجه اندازه Packet Loss برابر با مقدار Σnᵢ − ⌊(Σnᵢ)/k⌋ است.

تغییر پورت:

پکت‌های حجیم با ورود به هر سیستم از طریق یک پورت، این پورت را به صورت تصادفی به یک پورت دیگر تبدیل می‌کنند.

سازگاری:

توجه کنید سازگاری برای پکت‌های حجیم معنادار نیست و طبعاً پورت‌هایی متناظر با این پکت‌ها وجود نخواهد داشت.

اندازه‌ها و سکه:

اندازه ۸ واحد:

با هر بار ورود به سیستم 8 سکه به شبکه اضافه می‌‌کند

حرکت آن بر روی سیم‌های صاف با سرعت ثابت و بر روی انحناها، با شتاب ثابت است. (مگر در اثر Impact)

اندازه ۱۰ واحد:

با هر بار ورود به سیستم 10 سکه به شبکه اضافه می‌کند

حرکت این پکت روی تمام سیم‌ها با سرعت ثابت است اما به ازای طی مسافت مشخصی روی سیم‌ها، مرکز آن به مقدار مشخصی از روی سیم منحرف می‌شود. (مشابه اثر Impact روی حرکت پکت‌های دیگر در حال حرکت)

۴. محیط بازی و HUD
محیط بازی (Game Env.)

در این فاز از شما انتظار می‌رود علاوه بر Wire Length, Packet Loss, Coins قابلیت‌های فعال شبکه (که در ادامه معرفی خواهند شد) را نیز در صفحه بازی به نمایش بگذارید.

فاز جدید، HUD جدید!

در این فاز از پروژه، واحد سکه (Coin) به بازی اضافه می‌شود و اطلاعات جدید مربوط به وضعیت پکت‌ها و سیستم‌ها باید در HUD نمایش داده شود.

۵. باز هم به منو باز می‌گردیم! (فروشگاه درون‌بازی)
مشابه فاز اخیر، در فروشگاه تعبیه شده در فاز اول کاربر باید بتواند در ازای مقداری از سکه‌هایش، قابلیت‌هایی را تنها برای همان مرحله خریداری کند تا همان لحظه شروع به اثر کنند.
در این فاز باید قابلیت‌های زیر نیز در این فروشگاه قابل خریدن باشند:

Scroll of Aergia:

با پرداخت 10 سکه و انتخاب یک نقطه از یکی از اتصالات شبکه، شتاب حرکت پکت‌های گذرنده از این نقطه را برای مدت زمان مشخصی (مثلاً 20 ثانیه) صفر می‌کند و پکت‌ها (تا زمانی که مجدداً شتابی به آنها اعمال نشده باشد) با سرعت ثابت روی سیم‌ها حرکت می‌کنند.

توجه داشته باشید که استفاده از این قابلیت با cooldown همراه است یعنی بازیکن برای ‌استفاده مجدد از آن باید برای مدت زمان مشخصی صبر کند.

Scroll of Sisyphus:

با پرداخت 15 سکه، بازیکن می‌تواند یکی از سیستم‌های غیر مرجع را تا شعاعی مشخص جا‌به‌جا کند.

دقت کنید در استفاده از این قابلیت، طول سیم‌ها نباید از طول سیم موجود در مرحله تجاوز کند و همچنین جابجایی سیستم‌ها، در صورتی که باعث عبور سیم‌ها از سیستم‌ها شود، غیرمجاز است و نباید انجام‌پذیر باشد.

Scroll of Eliphas:

با پرداخت 20 سکه و انتخاب یک نقطه از یکی از اتصالات شبکه، این قابلیت برای مدت زمان مشخصی (مثلاً 30 ثانیه) فعال می‌شود.

تمام پکت‌هایی که از این نقطه از سیم عبور می‌کنند، مرکز ثقل خود را (که ممکن است تحت برخورد پکت‌ها و یا اثرات Impact جابجا شده باشد) به امتداد سیم باز می‌گردانند.

توجه کنید این حرکت باید به صورت پیوسته انجام شود زیرا در غیر این صورت وقوع Tunneling و به هم خوردن منطق برخورد محتمل خواهد بود.

۶. ذخیرهٔ بازی (Save System)
یکی از موارد مهم که همواره در پیاده‌سازی بازی‌ها (بالاخص بازی‌های fast-paced) ذخیره کردن وضعیت بازیست، تا بتوانیم در زمان‌های تعیین شده پیشروی بازی را ذخیره کنیم.
…
استیت ذخیره شده باید شامل تمام اجزای وضعیت ذخیره شده بازی باشد (اعم از همه سیستم‌ها و پکت‌ها، جهت و سرعت حرکت همه پکت‌ها و غیره) بدین معنا که لود شدن مجدد فایل سیو با ادامه بازی تفاوتی نکند.
دقت کنید در این بازی مکانیک سیو شما شامل سیو در هنگام خروج از مرحله و همچنین سیو مرتب بازی در بازه‌های زمانی مختلف است.

۶.۱. Save Validation (امتیازی)

در این بخش شما باید ساز و کاری امن برای لود کردن بازی ذخیره‌سازی شده طراحی کنید. …
هر راهکار دیگری در راستای این مشکل قابل قبول خواهد بود.

۶.۲. Save Synchronization (امتیازی)

در فرایند سیو یک بازی fast-paced با تعداد زیادی فیلد و آبجکت، علاوه بر مشکلات Concurrency معمول که در فرایند سیو بازی رخ می‌دهد، یکی از مسائل مهم همزمانی داده‌های رونوشت شده است. …
شما در این بخش باید با طراحی یک روند سیو مناسب، این مشکل را از سر راه بردارید و مطمئن شوید دیتای ذخیره‌سازی شده شما synchronized شده است.

۷. بازگشتی مجدد به SOLID
یکی از مشکلات بنیادی در روند پیاده‌سازی، ایجاد Cyclic Dependency در ساختار کد است. …
در نتیجه توصیه می‌شود اصول پایه‌ای SOLID را به درستی در کلاس‌هایی که نیاز به ذخیره شدن اطلاعات دارند، رعایت کنید و همانطور که در مقدمه نیز اشاره شد، کلاس‌های خود را تا حد امکان به ساختار POJO نزدیک نگه دارید تا از این ایراد معماری مصون بمانید!

۸. طراحی مراحل مختلف بازی
در این قسمت شما باید مجموعاً 5 مرحله مختلف برای آزمایش جنبه‌های مختلفی که در طی این دو فاز پیاده‌سازی شده‌اند طراحی کنید.
نکته بازی در اینجاست که مراحل طراحی شده شما باید متوالی باشند! …
انتظار می‌رود مراحل طراحی شده از کیفیت مناسب برخوردار باشند به نحوی که مشخصه‌های متفاوت بازی در آن قابل مشاهده باشد و بتوان قوانین بازی را در آنها آزمایش کرد.
شبکه و اتصالاتی که در پایان یک مرحله ساخته‌اید عیناً به مرحله بعد منتقل می‌شوند و حتی اجازه حذفشان را ندارید. تنها سیستم‌های جدید در هر مرحله اضافه می‌شوند و بازیکن باید با همان ساختار سیم‌کشیِ قبلی (به‌علاوهٔ سیستم‌های تازه) شبکهٔ خود را بهینه نگه دارد.











